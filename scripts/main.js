document.addEventListener('DOMContentLoaded', function () {
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ —Ñ–æ–∫—É—Å–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    function initFocusTrap() {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        const focusableSelectors = [
            'a[href]:not([tabindex="-1"])',
            'button:not([disabled]):not([tabindex="-1"])',
            'input:not([disabled]):not([tabindex="-1"])',
            'textarea:not([disabled]):not([tabindex="-1"])',
            'select:not([disabled]):not([tabindex="-1"])',
            '[tabindex]:not([tabindex="-1"])',
            'details:not([tabindex="-1"])',
            'summary:not([tabindex="-1"])'
        ].join(', ');

        const focusableElements = document.querySelectorAll(focusableSelectors);

        if (focusableElements.length === 0) return;

        const firstElement = focusableElements[0];
        const lastElement = focusableElements[focusableElements.length - 1];

        console.log(`Focus trap: ${focusableElements.length} focusable elements found`);

        document.addEventListener('keydown', function (e) {
            // –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å Tab
            if (e.key !== 'Tab') return;

            const activeElement = document.activeElement;

            // –ï—Å–ª–∏ Shift+Tab –Ω–∞ –ø–µ—Ä–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π
            if (e.shiftKey && activeElement === firstElement) {
                console.log('Focus trap: Shift+Tab on first element, moving to last');
                e.preventDefault();
                lastElement.focus();
            }
            // –ï—Å–ª–∏ Tab –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç–µ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø–µ—Ä–≤—ã–π
            else if (!e.shiftKey && activeElement === lastElement) {
                console.log('Focus trap: Tab on last element, moving to first');
                e.preventDefault();
                firstElement.focus();
            }
            // –ï—Å–ª–∏ —Ñ–æ–∫—É—Å –≤–Ω–µ –Ω–∞—à–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π –ø–∞–Ω–µ–ª–∏)
            else if (!Array.from(focusableElements).includes(activeElement) && activeElement !== document.body) {
                console.log('Focus trap: Focus outside page, moving to first element');
                e.preventDefault();
                firstElement.focus();
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    function fixImageBounds(imgElement, container) {
        if (!imgElement || !container) return;

        imgElement.style.maxWidth = '100%';
        imgElement.style.maxHeight = '100%';
        imgElement.style.objectFit = 'cover';
        imgElement.style.objectPosition = 'center';

        const containerWidth = container.offsetWidth;
        const containerHeight = container.offsetHeight;

        if (imgElement.naturalWidth > containerWidth || imgElement.naturalHeight > containerHeight) {
            imgElement.style.width = '100%';
            imgElement.style.height = '100%';
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
    const profilePhoto = document.querySelector('.profile-photo');
    const profileImage = document.querySelector('.profile-image');

    if (profilePhoto && profileImage) {
        profilePhoto.onload = function () {
            console.log('–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
            fixImageBounds(this, profileImage);
        };

        profilePhoto.onerror = function () {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è: ' + this.src);
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
            const placeholder = profileImage.querySelector('.photo-placeholder');
            if (placeholder) {
                placeholder.style.opacity = '1';
            }
        };

        if (profilePhoto.complete && profilePhoto.naturalHeight !== 0) {
            fixImageBounds(profilePhoto, profileImage);
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –ø—Ä–æ–µ–∫—Ç–æ–≤
    const projectPhotos = document.querySelectorAll('.project-photo');
    projectPhotos.forEach((photo) => {
        const projectImage = photo.closest('.project-image');

        if (projectImage) {
            photo.onload = function () {
                console.log('–§–æ—Ç–æ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
                fixImageBounds(this, projectImage);
            };

            photo.onerror = function () {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –ø—Ä–æ–µ–∫—Ç–∞: ' + this.src);
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
                projectImage.style.background = 'linear-gradient(135deg, #667eea, #764ba2)';
            };

            if (photo.complete && photo.naturalHeight !== 0) {
                fixImageBounds(photo, projectImage);
            }
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∫–æ–Ω–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    const contactIcons = document.querySelectorAll('.contact-icon');
    contactIcons.forEach((icon) => {
        icon.onerror = function () {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∫–æ–Ω–∫–∏: ' + this.src);
            // –ó–∞–º–µ–Ω—è–µ–º —Å–ª–æ–º–∞–Ω–Ω—É—é –∏–∫–æ–Ω–∫—É –Ω–∞ —ç–º–æ–¥–∑–∏
            const alt = this.getAttribute('alt');
            let emoji = 'üìß';
            if (alt.includes('GitHub')) emoji = 'üêô';
            if (alt.includes('–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è')) emoji = 'üìç';
            this.style.display = 'none';
            const emojiSpan = document.createElement('span');
            emojiSpan.className = 'contact-emoji';
            emojiSpan.textContent = emoji;
            this.parentNode.insertBefore(emojiSpan, this);
        };
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectCards = document.querySelectorAll('.project-card');

    if (filterButtons.length > 0 && projectCards.length > 0) {
        // –î–æ–±–∞–≤–ª—è–µ–º ARIA-–∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        filterButtons.forEach((button, index) => {
            button.setAttribute('role', 'button');
            button.setAttribute('aria-pressed', button.classList.contains('active'));
            button.setAttribute('tabindex', '0');

            if (index === 0) {
                button.setAttribute('aria-label', '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã');
            } else {
                const filterType = button.dataset.filter;
                button.setAttribute('aria-label', `–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π ${filterType}`);
            }
        });

        filterButtons.forEach(button => {
            button.addEventListener('click', () => {
                const filter = button.dataset.filter;

                // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
                filterButtons.forEach(btn => {
                    btn.classList.remove('active');
                    btn.setAttribute('aria-pressed', 'false');
                });
                button.classList.add('active');
                button.setAttribute('aria-pressed', 'true');

                // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç—ã
                let visibleCount = 0;
                projectCards.forEach(card => {
                    if (filter === 'all' || card.dataset.tech === filter) {
                        card.style.display = 'block';
                        card.removeAttribute('aria-hidden');
                        visibleCount++;
                    } else {
                        card.style.display = 'none';
                        card.setAttribute('aria-hidden', 'true');
                    }
                });

                // –û–±–Ω–æ–≤–ª—è–µ–º live region —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
                updateFilterResults(visibleCount, projectCards.length);
            });

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
            button.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' || e.key === ' ') {
                    e.preventDefault();
                    button.click();
                }
            });
        });
    }

    function updateFilterResults(visible, total) {
        let liveRegion = document.getElementById('filter-live-region');
        if (!liveRegion) {
            liveRegion = document.createElement('div');
            liveRegion.id = 'filter-live-region';
            liveRegion.setAttribute('aria-live', 'polite');
            liveRegion.setAttribute('aria-atomic', 'true');
            liveRegion.className = 'visually-hidden';
            document.querySelector('.projects-header')?.appendChild(liveRegion);
        }

        liveRegion.textContent = `–ü–æ–∫–∞–∑–∞–Ω–æ ${visible} –∏–∑ ${total} –ø—Ä–æ–µ–∫—Ç–æ–≤`;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é)
    const contactForm = document.querySelector('.contact-form form');
    if (contactForm && contactForm.id !== 'contact-form') {
        // –°—Ç–∞—Ä–∞—è –ø—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º
        contactForm.addEventListener('submit', function (e) {
            e.preventDefault();
            alert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! (–≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è)');
            this.reset();
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
    if (document.getElementById('contact-form')) {
        initContactFormValidation();
    }

    // –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
    const projectsData = {
        1: {
            title: "–õ–∏—á–Ω—ã–π —Å–∞–π—Ç",
            image: "../images/project1.jpg",
            description: "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç-–≤–∏–∑–∏—Ç–∫–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏. –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∑—ã–≤—á–∏–≤–∞—è –≤–µ—Ä—Å—Ç–∫–∞, –ø–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã.",
            tech: ["HTML", "CSS"]
        },
        2: {
            title: "Todo-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            image: "../images/project2.jpg",
            description: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π. –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á.",
            tech: ["JavaScript"]
        },
        3: {
            title: "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω",
            image: "../images/project3.jpg",
            description: "–ü—Ä–æ—Ç–æ—Ç–∏–ø –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π —Ç–æ–≤–∞—Ä–æ–≤ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞. –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏.",
            tech: ["React"]
        },
        4: {
            title: "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
            image: "../images/project4.jpg",
            description: "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –Ω–∞ Bootstrap —Å —Å–µ—Ç–∫–æ–π –ø—Ä–æ–µ–∫—Ç–æ–≤. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –∫—Ä–æ—Å—Å–±—Ä–∞—É–∑–µ—Ä–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å.",
            tech: ["Bootstrap"]
        }
    };

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    function initModal() {
        const modal = document.getElementById('project-modal');
        if (!modal) return;

        let previousActiveElement;

        const modalOverlay = modal.querySelector('.modal-overlay');
        const modalClose = modal.querySelector('.modal-close');
        const projectCards = document.querySelectorAll('.project-card');

        // –î–æ–±–∞–≤–ª—è–µ–º ARIA-–∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.setAttribute('role', 'dialog');
        modal.setAttribute('aria-modal', 'true');
        modal.setAttribute('aria-labelledby', 'modal-title');
        modal.setAttribute('tabindex', '-1');

        // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        projectCards.forEach(card => {
            card.addEventListener('click', (e) => {
                const projectId = card.dataset.project;
                openModal(projectId);
            });

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
            card.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' || e.key === ' ') {
                    e.preventDefault();
                    const projectId = card.dataset.project;
                    openModal(projectId);
                }
            });

            // –î–µ–ª–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            card.setAttribute('tabindex', '0');
            card.setAttribute('role', 'button');
            card.setAttribute('aria-label', `–û—Ç–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞: ${card.querySelector('.project-title')?.textContent}`);
        });

        // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        function openModal(projectId) {
            const project = projectsData[projectId];

            if (!project) return;

            // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–∞–Ω–Ω—ã–º–∏
            modal.querySelector('#modal-title').textContent = project.title;
            modal.querySelector('.modal-photo').src = project.image;
            modal.querySelector('.modal-photo').alt = project.title;
            modal.querySelector('.modal-description p').textContent = project.description;

            // –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
            const techTags = modal.querySelector('.tech-tags');
            techTags.innerHTML = '';
            project.tech.forEach(tech => {
                const tag = document.createElement('span');
                tag.className = 'tech-tag';
                tag.textContent = tech;
                techTags.appendChild(tag);
            });

            // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ñ–æ–∫—É—Å–∞
            previousActiveElement = document.activeElement;

            // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç —Å–∫—Ä–∏–Ω—Ä–∏–¥–µ—Ä–∞
            document.querySelectorAll('body > *:not(.modal):not(.overlay)')
                .forEach(el => el.setAttribute('aria-hidden', 'true'));

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            modal.style.display = 'flex';
            document.body.classList.add('modal-open');

            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
            modal.focus();

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Escape
            document.addEventListener('keydown', handleEscape);

            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
            setTimeout(() => {
                modal.classList.add('active');
            }, 10);
        }

        // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        function closeModal() {
            modal.classList.remove('active');
            document.body.classList.remove('modal-open');

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
            document.querySelectorAll('[aria-hidden="true"]')
                .forEach(el => el.removeAttribute('aria-hidden'));

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
            if (previousActiveElement) {
                previousActiveElement.focus();
            }

            // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Escape
            document.removeEventListener('keydown', handleEscape);

            setTimeout(() => {
                modal.style.display = 'none';
            }, 300);
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à–∏ Escape
        function handleEscape(event) {
            if (event.key === 'Escape' && modal.classList.contains('active')) {
                closeModal();
            }
        }

        // –ó–∞—Ö–≤–∞—Ç —Ñ–æ–∫—É—Å–∞ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª–∫–∏
        modal.addEventListener('keydown', function (event) {
            if (event.key === 'Tab' && modal.classList.contains('active')) {
                const focusableElements = modal.querySelectorAll(
                    'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
                );

                if (focusableElements.length === 0) return;

                const firstElement = focusableElements[0];
                const lastElement = focusableElements[focusableElements.length - 1];

                // –ó–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª–∫–∏
                if (event.shiftKey && document.activeElement === firstElement) {
                    event.preventDefault();
                    lastElement.focus();
                } else if (!event.shiftKey && document.activeElement === lastElement) {
                    event.preventDefault();
                    firstElement.focus();
                }
            }

            // Escape –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            if (event.key === 'Escape' && modal.classList.contains('active')) {
                closeModal();
            }
        });

        modalOverlay.addEventListener('click', closeModal);
        modalClose.addEventListener('click', closeModal);

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç
        modal.querySelector('.modal-content').addEventListener('click', (e) => {
            e.stopPropagation();
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç—ã
    if (document.querySelector('.project-card')) {
        initModal();
    }

    // –§—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
    function initContactFormValidation() {
        const contactForm = document.getElementById('contact-form');
        if (!contactForm) return;

        const nameInput = document.getElementById('name');
        const emailInput = document.getElementById('email');
        const messageInput = document.getElementById('message');

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        nameInput?.addEventListener('blur', validateContactName);
        emailInput?.addEventListener('blur', validateContactEmail);
        messageInput?.addEventListener('blur', validateContactMessage);

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
        contactForm.addEventListener('submit', function (e) {
            e.preventDefault();

            if (validateContactForm()) {
                // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
                showSuccessMessage(contactForm, '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
                contactForm.reset();
                clearAllErrors(contactForm);

                // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
                setTimeout(() => {
                    nameInput?.focus();
                }, 100);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ Escape –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ—à–∏–±–æ–∫
        contactForm.addEventListener('keydown', function (e) {
            if (e.key === 'Escape') {
                const activeError = document.querySelector('.error:focus');
                if (activeError) {
                    const errorId = activeError.getAttribute('aria-describedby')?.split(' ')[1];
                    if (errorId) {
                        const errorElement = document.getElementById(errorId);
                        clearError(activeError, errorElement);
                    }
                }
            }
        });
    }

    function validateContactName() {
        const nameInput = document.getElementById('name');
        const errorElement = document.getElementById('name-error');
        if (!nameInput || !errorElement) return false;

        const value = nameInput.value.trim();

        if (!validateRequired(value)) {
            showError(nameInput, errorElement, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
            return false;
        } else if (value.length < 2) {
            showError(nameInput, errorElement, '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
            return false;
        } else {
            clearError(nameInput, errorElement);
            return true;
        }
    }

    function validateContactEmail() {
        const emailInput = document.getElementById('email');
        const errorElement = document.getElementById('email-error');
        if (!emailInput || !errorElement) return false;

        const value = emailInput.value.trim();

        if (!validateRequired(value)) {
            showError(emailInput, errorElement, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ email –∞–¥—Ä–µ—Å');
            return false;
        } else if (!validateEmail(value)) {
            showError(emailInput, errorElement, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å');
            return false;
        } else {
            clearError(emailInput, errorElement);
            return true;
        }
    }

    function validateContactMessage() {
        const messageInput = document.getElementById('message');
        const errorElement = document.getElementById('message-error');
        if (!messageInput || !errorElement) return false;

        const value = messageInput.value.trim();

        if (!validateRequired(value)) {
            showError(messageInput, errorElement, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
            return false;
        } else if (value.length < 10) {
            showError(messageInput, errorElement, '–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤');
            return false;
        } else {
            clearError(messageInput, errorElement);
            return true;
        }
    }

    function validateContactForm() {
        const isNameValid = validateContactName();
        const isEmailValid = validateContactEmail();
        const isMessageValid = validateContactMessage();

        return isNameValid && isEmailValid && isMessageValid;
    }

    // –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    function validateEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    function validateRequired(value, minLength = 1) {
        return value && value.trim().length >= minLength;
    }

    function showError(input, errorElement, message) {
        input.setAttribute('aria-invalid', 'true');
        errorElement.textContent = message;
        input.classList.add('error');

        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏
        if (!input.parentNode.querySelector('.error-indicator')) {
            const errorIndicator = document.createElement('span');
            errorIndicator.className = 'error-indicator';
            errorIndicator.textContent = '‚ö†';
            errorIndicator.setAttribute('aria-hidden', 'true');
            input.parentNode.appendChild(errorIndicator);
        }
    }

    function clearError(input, errorElement) {
        input.setAttribute('aria-invalid', 'false');
        errorElement.textContent = '';
        input.classList.remove('error');

        // –£–±–∏—Ä–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏
        const errorIndicator = input.parentNode.querySelector('.error-indicator');
        if (errorIndicator) {
            errorIndicator.remove();
        }
    }

    function clearAllErrors(form) {
        const errors = form.querySelectorAll('.error-message');
        errors.forEach(error => error.textContent = '');

        const inputs = form.querySelectorAll('input, textarea');
        inputs.forEach(input => {
            input.setAttribute('aria-invalid', 'false');
            input.classList.remove('error');

            const errorIndicator = input.parentNode.querySelector('.error-indicator');
            if (errorIndicator) {
                errorIndicator.remove();
            }
        });
    }

    function showSuccessMessage(form, message = '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!') {
        let liveRegion = form.querySelector('.form-live-region');
        if (!liveRegion) {
            liveRegion = document.createElement('div');
            liveRegion.className = 'form-live-region visually-hidden';
            liveRegion.setAttribute('aria-live', 'polite');
            liveRegion.setAttribute('aria-atomic', 'true');
            form.appendChild(liveRegion);
        }

        liveRegion.textContent = message;

        setTimeout(() => {
            liveRegion.textContent = '';
        }, 5000);
    }

    // –§–æ–ª–±—ç–∫ –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
    function initFallbackContactForm() {
        const contactForm = document.getElementById('contact-form');
        if (!contactForm) return;

        contactForm.addEventListener('submit', function (e) {
            e.preventDefault();

            const name = document.getElementById('name')?.value.trim();
            const email = document.getElementById('email')?.value.trim();
            const message = document.getElementById('message')?.value.trim();

            let isValid = true;

            // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
            if (!name) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
                isValid = false;
            } else if (!email || !email.includes('@')) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
                isValid = false;
            } else if (!message || message.length < 10) {
                alert('–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤');
                isValid = false;
            }

            if (isValid) {
                alert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
                contactForm.reset();
            }
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    function initAccessibleNavigation() {
        const navLinks = document.querySelectorAll('.nav-link');
        navLinks.forEach(link => {
            link.setAttribute('tabindex', '0');

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            link.addEventListener('keydown', (e) => {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    link.click();
                }
            });
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    function initAccessibleButtons() {
        const buttons = document.querySelectorAll('.btn:not([aria-label])');
        buttons.forEach(button => {
            if (!button.textContent.trim() && !button.getAttribute('aria-label')) {
                button.setAttribute('aria-label', '–ö–Ω–æ–ø–∫–∞');
            }
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    initAccessibleNavigation();
    initAccessibleButtons();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞—Ö–≤–∞—Ç–∞ —Ñ–æ–∫—É—Å–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    initFocusTrap();

    // –î–æ–±–∞–≤–ª—è–µ–º tabindex –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const mainContent = document.getElementById('main-content');
    if (mainContent && !mainContent.hasAttribute('tabindex')) {
        mainContent.setAttribute('tabindex', '-1');
    }

    console.log('All accessibility features initialized');
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ (–¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
const accessibilityStyles = `
.visually-hidden {
    position: absolute !important;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

.error-indicator {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    color: #ef4444;
    font-size: 16px;
}

.form-group {
    position: relative;
}

input.error,
textarea.error {
    border-color: #ef4444;
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.1);
}

.nav-link:focus,
.btn:focus,
.filter-btn:focus,
input:focus,
textarea:focus,
button:focus {
    outline: 3px solid #3b82f6;
    outline-offset: 2px;
}

.project-card:focus {
    outline: 3px solid #3b82f6;
    outline-offset: 2px;
    transform: translateY(-2px);
}

.skip-link {
    position: absolute;
    inset-inline-start: 1rem;
    inset-block-start: -100%;
    z-index: 10000;
    padding: .5rem .75rem;
    background: #3b82f6;
    color: white;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 600;
    transition: inset-block-start 0.2s ease;
}

.skip-link:focus,
.skip-link:focus-visible {
    inset-block-start: 1rem;
}
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç
if (document.head) {
    const styleElement = document.createElement('style');
    styleElement.textContent = accessibilityStyles;
    document.head.appendChild(styleElement);
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞—Ö–≤–∞—Ç–∞ —Ñ–æ–∫—É—Å–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å–∫—Ä—ã—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function createFocusTrapElements() {
    // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const trapStart = document.createElement('div');
    trapStart.className = 'focus-trap';
    trapStart.setAttribute('tabindex', '0');
    trapStart.setAttribute('aria-hidden', 'true');
    trapStart.style.position = 'absolute';
    trapStart.style.width = '1px';
    trapStart.style.height = '1px';
    trapStart.style.padding = '0';
    trapStart.style.margin = '-1px';
    trapStart.style.overflow = 'hidden';
    trapStart.style.clip = 'rect(0, 0, 0, 0)';
    trapStart.style.whiteSpace = 'nowrap';
    trapStart.style.border = '0';

    const trapEnd = trapStart.cloneNode(true);

    // –í—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü body
    document.body.insertBefore(trapStart, document.body.firstChild);
    document.body.appendChild(trapEnd);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ª–æ–≤—É—à–∫–∞—Ö
    trapStart.addEventListener('focus', () => {
        const focusableElements = getFocusableElements();
        if (focusableElements.length > 0) {
            focusableElements[focusableElements.length - 1].focus();
        }
    });

    trapEnd.addEventListener('focus', () => {
        const focusableElements = getFocusableElements();
        if (focusableElements.length > 0) {
            focusableElements[0].focus();
        }
    });
}

function getFocusableElements() {
    return document.querySelectorAll(
        'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex="-1"])'
    );
}
